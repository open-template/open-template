var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BaseType-1.html",[0,0.078,1,0.624,2,1.612]],["body/interfaces/BaseType-1.html",[0,0.164,1,1.333,3,0.467,4,0.581,5,0.581,6,0.581,7,0.855,8,0.855,9,0.467,10,0.638,11,2.686,12,1.428,13,1.428,14,1.428,15,0.903,16,0.07,17,0.97,18,0.855,19,0.467,20,0.467,21,0.855,22,0.855,23,1.073,24,0.709,25,1.543,26,1.495,27,0.709,28,0.855,29,0.709,30,0.855,31,0.709,32,0.855,33,0.709,34,1.102,35,0.855,36,0.047,37,0.047]],["title/interfaces/IType.html",[0,0.093,38,1.551]],["body/interfaces/IType.html",[0,0.104,3,0.287,4,0.357,5,0.357,6,0.357,16,0.073,17,0.682,19,0.287,20,0.287,23,0.556,36,0.033,37,0.033,38,1.424,39,1.127,40,0.915,41,1.753,42,1.448,43,1.753,44,1.747,45,0.915,46,1.448,47,2.36,48,1.178,49,0.915,50,0.915,51,2.426,52,1.127,53,1.127,54,1.971,55,1.753,56,1.127,57,1.424,58,1.127,59,0.915,60,1.127,61,1.424,62,0.915,63,0.915,64,0.915,65,0.915,66,0.915,67,0.915,68,1.127,69,1.127,70,1.127,71,1.127,72,1.127,73,0.757,74,2.151,75,2.151,76,1.747,77,2.151,78,2.151,79,2.151,80,2.151,81,1.753,82,1.753,83,1.127,84,1.127,85,1.424,86,1.127,87,1.127,88,1.127,89,1.127,90,2.151,91,2.629,92,1.127,93,1.127,94,1.753,95,1.127,96,1.753,97,1.127,98,2.783,99,2.073,100,2.506,101,1.127,102,1.753,103,2.151,104,2.151,105,3.085,106,1.127,107,2.151,108,2.151,109,2.151,110,1.127,111,1.753,112,1.127,113,1.127,114,1.753,115,1.127]],["title/injectables/ScllibService.html",[48,1.284,73,1.284]],["body/injectables/ScllibService.html",[0,0.074,4,0.299,5,0.299,6,0.299,9,0.241,10,0.388,11,1.785,15,0.86,16,0.072,17,0.697,19,0.241,20,0.388,23,0.483,36,0.029,37,0.029,38,0.767,39,0.944,40,0.767,41,0.944,43,0.944,44,1.237,45,2.203,47,2.203,48,1.024,49,0.767,50,0.767,51,2.712,52,0.944,53,0.944,54,1.785,55,1.523,56,0.944,57,1.237,58,0.944,59,0.767,60,0.944,61,1.237,62,0.767,63,0.767,64,0.767,65,0.767,66,0.767,67,0.767,68,1.523,69,1.523,70,0.944,71,0.944,72,0.944,73,1.024,74,1.915,75,1.915,76,1.555,77,1.915,78,1.915,79,2.914,80,2.578,81,2.197,82,2.197,83,1.523,84,0.944,85,1.555,86,1.523,87,0.944,88,0.944,89,0.944,90,1.915,91,2.411,92,0.944,93,0.944,94,1.523,95,0.944,96,1.523,97,0.944,98,2.578,99,1.958,100,2.367,101,1.523,102,2.197,103,1.915,104,1.915,105,2.914,106,0.944,107,1.915,108,1.915,109,1.915,110,1.523,111,2.197,112,0.944,113,1.523,114,2.197,115,0.944,116,1.213,117,1.958,118,1.958,119,1.213,120,2.197,121,2.197,122,1.958,123,2.824,124,1.213,125,1.213,126,1.213,127,1.213,128,1.213,129,1.213,130,1.213,131,1.213,132,1.213]],["title/interfaces/_Date.html",[0,0.093,29,0.739]],["body/interfaces/_Date.html",[0,0.167,1,1.349,3,0.492,4,0.612,5,0.612,6,0.612,7,0.902,8,0.902,9,0.492,10,0.661,12,0.902,13,0.902,14,0.902,15,0.612,16,0.07,17,0.822,18,0.902,19,0.492,20,0.492,21,0.902,22,0.902,23,1.088,24,0.747,25,1.602,26,1.628,27,0.747,28,0.902,29,1.003,30,1.366,31,0.747,32,0.902,33,0.747,34,1.132,35,0.902,36,0.049,37,0.049]],["title/interfaces/_any.html",[0,0.093,24,0.739]],["body/interfaces/_any.html",[0,0.167,1,1.352,3,0.496,4,0.617,5,0.617,6,0.617,7,0.909,8,0.909,9,0.496,10,0.664,12,0.909,13,0.909,14,0.909,15,0.617,16,0.07,17,0.826,18,0.909,19,0.496,20,0.496,21,0.909,22,0.909,23,1.09,24,1.008,25,1.605,26,1.631,27,0.753,28,0.909,29,0.753,30,0.909,31,0.753,32,0.909,33,0.753,34,1.137,35,0.909,36,0.049,37,0.049]],["title/interfaces/_boolean.html",[0,0.093,27,0.739]],["body/interfaces/_boolean.html",[0,0.167,1,1.349,3,0.492,4,0.612,5,0.612,6,0.612,7,0.902,8,0.902,9,0.492,10,0.661,12,0.902,13,0.902,14,0.902,15,0.612,16,0.07,17,0.822,18,0.902,19,0.492,20,0.492,21,0.902,22,0.902,23,1.088,24,0.747,25,1.602,26,1.628,27,1.003,28,1.366,29,0.747,30,0.902,31,0.747,32,0.902,33,0.747,34,1.132,35,0.902,36,0.049,37,0.049]],["title/interfaces/_number.html",[0,0.093,31,0.739]],["body/interfaces/_number.html",[0,0.167,1,1.349,3,0.492,4,0.612,5,0.612,6,0.612,7,0.902,8,0.902,9,0.492,10,0.661,12,0.902,13,0.902,14,0.902,15,0.612,16,0.07,17,0.822,18,0.902,19,0.492,20,0.492,21,0.902,22,0.902,23,1.088,24,0.747,25,1.602,26,1.628,27,0.747,28,0.902,29,0.747,30,0.902,31,1.003,32,1.366,33,0.747,34,1.132,35,0.902,36,0.049,37,0.049]],["title/interfaces/_string.html",[0,0.093,33,0.739]],["body/interfaces/_string.html",[0,0.167,1,1.349,3,0.492,4,0.612,5,0.612,6,0.612,7,0.902,8,0.902,9,0.492,10,0.661,12,0.902,13,0.902,14,0.902,15,0.612,16,0.07,17,0.992,18,0.902,19,0.492,20,0.492,21,0.902,22,0.902,23,1.088,24,0.747,25,1.602,26,1.628,27,0.747,28,0.902,29,0.747,30,0.902,31,0.747,32,0.902,33,1.003,34,1.132,35,0.902,36,0.049,37,0.049]],["title/dependencies.html",[133,1.612,134,2.288]],["body/dependencies.html",[16,0.069,36,0.06,37,0.06,49,2.182,134,3.195,135,3.452,136,3.452,137,3.452,138,3.452,139,4.106,140,3.452,141,3.452]],["title/miscellaneous/functions.html",[142,1.612,143,2.288]],["body/miscellaneous/functions.html",[9,0.685,11,2.182,16,0.065,36,0.06,37,0.06,59,2.595,120,2.687,121,2.687,142,2.687,143,2.687,144,3.452,145,3.452,146,3.452,147,4.106,148,3.452]],["title/index.html",[9,0.411,149,2.071,150,2.071]],["body/index.html",[0,0.056,3,0.292,15,0.563,16,0.069,19,0.675,20,0.292,34,0.443,36,0.034,37,0.034,44,1.765,45,0.93,47,1.441,50,0.93,54,1.441,57,0.93,61,0.93,62,0.93,63,0.93,64,0.93,65,0.93,66,0.93,67,0.93,73,1.645,76,1.765,85,0.93,99,1.645,100,2.151,151,2.281,152,2.447,153,2.281,154,1.775,155,2.447,156,1.775,157,1.775,158,1.775,159,2.792,160,2.281,161,3.145,162,3.145,163,1.472,164,1.472,165,3.145,166,3.145,167,1.472,168,2.447,169,1.472,170,1.472,171,2.792,172,1.472,173,1.472,174,2.281,175,1.472,176,1.472,177,1.472,178,1.472,179,1.472,180,1.472,181,1.472,182,1.472,183,1.472,184,1.472,185,1.472,186,1.472,187,1.472,188,2.281,189,2.792,190,2.173,191,1.472,192,1.472,193,1.472,194,1.472,195,2.281,196,1.472,197,1.472,198,3.145,199,2.922,200,1.472,201,1.472,202,1.472,203,1.472,204,1.472,205,1.472,206,2.281,207,1.472,208,1.472,209,1.472,210,1.472,211,1.472,212,1.472,213,1.472,214,1.472,215,1.472,216,1.472,217,2.281,218,1.472,219,1.472,220,1.472,221,1.472,222,1.472,223,2.281,224,1.472,225,1.472,226,1.775,227,2.792,228,1.472,229,2.281,230,1.472,231,1.472,232,1.472,233,1.472,234,1.472,235,1.472,236,1.472,237,1.472,238,1.472,239,1.472,240,1.472,241,1.472,242,1.472,243,1.472,244,1.472,245,1.472,246,1.472,247,1.472,248,1.472,249,1.472,250,1.472,251,1.472,252,1.472,253,1.472,254,1.472,255,1.472,256,3.145,257,2.281,258,1.472,259,1.472,260,2.792,261,1.472,262,2.281,263,1.472,264,3.145,265,2.281,266,1.472,267,1.472,268,1.472,269,2.792,270,1.472,271,1.472,272,1.472,273,1.472,274,1.472]],["title/modules.html",[275,2.573]],["body/modules.html",[16,0.063,36,0.063,37,0.063,275,2.908]],["title/overview.html",[276,2.573]],["body/overview.html",[2,2.841,3,0.724,16,0.062,36,0.062,37,0.062,48,1.909,276,2.841,277,3.651]],["title/properties.html",[10,0.583,133,1.612]],["body/properties.html",[10,0.603,16,0.07,36,0.056,37,0.056,40,1.921,99,1.59,152,2.366,154,2.366,155,2.366,156,2.957,157,2.366,158,2.366,168,2.366,190,2.366,199,2.366,226,2.366,278,3.04,279,3.04,280,3.04,281,3.04,282,3.8,283,4.145,284,3.04,285,3.04,286,3.04,287,3.04,288,3.04,289,3.04,290,3.04,291,3.04,292,3.04]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.1.24",{"_index":263,"title":{},"body":{"index.html":{}}}],["0.2.0",{"_index":265,"title":{},"body":{"index.html":{}}}],["1",{"_index":2,"title":{"interfaces/BaseType-1.html":{}},"body":{"overview.html":{}}}],["1.0.12",{"_index":278,"title":{},"body":{"properties.html":{}}}],["1.0.5",{"_index":271,"title":{},"body":{"index.html":{}}}],["1.0.6",{"_index":273,"title":{},"body":{"index.html":{}}}],["14",{"_index":270,"title":{},"body":{"index.html":{}}}],["14.1.3",{"_index":169,"title":{},"body":{"index.html":{}}}],["15",{"_index":272,"title":{},"body":{"index.html":{}}}],["16",{"_index":274,"title":{},"body":{"index.html":{}}}],["16.2.3",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":136,"title":{},"body":{"dependencies.html":{}}}],["2007",{"_index":182,"title":{},"body":{"index.html":{}}}],["220",{"_index":277,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":196,"title":{},"body":{"index.html":{}}}],["4",{"_index":179,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["61850",{"_index":157,"title":{},"body":{"index.html":{},"properties.html":{}}}],["_any",{"_index":24,"title":{"interfaces/_any.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_boolean",{"_index":27,"title":{"interfaces/_boolean.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_date",{"_index":29,"title":{"interfaces/_Date.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_number",{"_index":31,"title":{"interfaces/_number.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_scltype",{"_index":44,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["_string",{"_index":33,"title":{"interfaces/_string.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["advantages",{"_index":218,"title":{},"body":{"index.html":{}}}],["allows",{"_index":200,"title":{},"body":{"index.html":{}}}],["angular",{"_index":166,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":138,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":49,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"dependencies.html":{}}}],["api",{"_index":191,"title":{},"body":{"index.html":{}}}],["arr",{"_index":147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":21,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["author",{"_index":290,"title":{},"body":{"properties.html":{}}}],["automatically",{"_index":232,"title":{},"body":{"index.html":{}}}],["b",{"_index":181,"title":{},"body":{"index.html":{}}}],["based",{"_index":212,"title":{},"body":{"index.html":{}}}],["basetype",{"_index":1,"title":{"interfaces/BaseType-1.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["between",{"_index":202,"title":{},"body":{"index.html":{}}}],["bidirectional",{"_index":222,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["bugs",{"_index":285,"title":{},"body":{"properties.html":{}}}],["called",{"_index":206,"title":{},"body":{"index.html":{}}}],["capabilitiesurl",{"_index":129,"title":{},"body":{"injectables/ScllibService.html":{}}}],["case",{"_index":175,"title":{},"body":{"index.html":{}}}],["class",{"_index":72,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["cli",{"_index":167,"title":{},"body":{"index.html":{}}}],["code",{"_index":239,"title":{},"body":{"index.html":{}}}],["comments",{"_index":249,"title":{},"body":{"index.html":{}}}],["compact",{"_index":241,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":20,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["completion",{"_index":253,"title":{},"body":{"index.html":{}}}],["console.debug",{"_index":107,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["console.info",{"_index":98,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["const",{"_index":54,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["constructor(private",{"_index":176,"title":{},"body":{"index.html":{}}}],["containing",{"_index":240,"title":{},"body":{"index.html":{}}}],["content",{"_index":12,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["context",{"_index":80,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["continue",{"_index":266,"title":{},"body":{"index.html":{}}}],["conversions",{"_index":211,"title":{},"body":{"index.html":{}}}],["convert",{"_index":201,"title":{},"body":{"index.html":{}}}],["cxml",{"_index":245,"title":{},"body":{"index.html":{}}}],["cxsd",{"_index":190,"title":{},"body":{"index.html":{},"properties.html":{}}}],["d.ts",{"_index":246,"title":{},"body":{"index.html":{}}}],["data",{"_index":122,"title":{},"body":{"injectables/ScllibService.html":{}}}],["date",{"_index":30,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["declarative",{"_index":213,"title":{},"body":{"index.html":{}}}],["defined",{"_index":45,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["definition",{"_index":247,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":40,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"properties.html":{}}}],["disable",{"_index":75,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["document",{"_index":34,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["downloads",{"_index":233,"title":{},"body":{"index.html":{}}}],["driven",{"_index":224,"title":{},"body":{"index.html":{}}}],["each",{"_index":237,"title":{},"body":{"index.html":{}}}],["editors",{"_index":251,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":74,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["eslint/no",{"_index":77,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["explicit",{"_index":78,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["file",{"_index":6,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["files",{"_index":171,"title":{},"body":{"index.html":{}}}],["fixing",{"_index":193,"title":{},"body":{"index.html":{}}}],["form",{"_index":209,"title":{},"body":{"index.html":{}}}],["functions",{"_index":143,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":165,"title":{},"body":{"index.html":{}}}],["generator",{"_index":228,"title":{},"body":{"index.html":{}}}],["generic",{"_index":41,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["getting",{"_index":149,"title":{"index.html":{}},"body":{}}],["git+https://github.com/open",{"_index":288,"title":{},"body":{"properties.html":{}}}],["header",{"_index":183,"title":{},"body":{"index.html":{}}}],["help",{"_index":250,"title":{},"body":{"index.html":{}}}],["highly",{"_index":230,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":281,"title":{},"body":{"properties.html":{}}}],["http://www.iec.ch/61850/2003/scl",{"_index":63,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["http://www.w3.org/2001/xmlschema",{"_index":64,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["https://github.com/highsource/jsonix/pull/266",{"_index":194,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":282,"title":{},"body":{"properties.html":{}}}],["id",{"_index":184,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":153,"title":{},"body":{"index.html":{}}}],["iec",{"_index":156,"title":{},"body":{"index.html":{},"properties.html":{}}}],["iec61850",{"_index":280,"title":{},"body":{"properties.html":{}}}],["if(namespace",{"_index":87,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/BaseType-1.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"miscellaneous/functions.html":{}}}],["indexable",{"_index":42,"title":{},"body":{"interfaces/IType.html":{}}}],["info",{"_index":4,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["information",{"_index":258,"title":{},"body":{"index.html":{}}}],["init",{"_index":83,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["injectable",{"_index":48,"title":{"injectables/ScllibService.html":{}},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"overview.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/ScllibService.html":{}}}],["install",{"_index":160,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["interfaces",{"_index":3,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{},"overview.html":{}}}],["itype",{"_index":38,"title":{"interfaces/IType.html":{}},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["javascript",{"_index":189,"title":{},"body":{"index.html":{}}}],["js",{"_index":238,"title":{},"body":{"index.html":{}}}],["jsdoc",{"_index":248,"title":{},"body":{"index.html":{}}}],["json",{"_index":198,"title":{},"body":{"index.html":{}}}],["jsonix",{"_index":19,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["jsonix.context([module",{"_index":93,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["jsonix.context([module.$],namespace",{"_index":92,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["key",{"_index":43,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["keywords",{"_index":279,"title":{},"body":{"properties.html":{}}}],["lib",{"_index":100,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["lib';example",{"_index":172,"title":{},"body":{"index.html":{}}}],["libcontext",{"_index":170,"title":{},"body":{"index.html":{}}}],["library",{"_index":155,"title":{},"body":{"index.html":{},"properties.html":{}}}],["libworkspace",{"_index":163,"title":{},"body":{"index.html":{}}}],["license",{"_index":152,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lodash",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["machine",{"_index":243,"title":{},"body":{"index.html":{}}}],["main",{"_index":68,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["manually",{"_index":216,"title":{},"body":{"index.html":{}}}],["map",{"_index":22,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["mappings",{"_index":57,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["mappingstyle",{"_index":66,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["marshal",{"_index":173,"title":{},"body":{"index.html":{}}}],["marshaldocument",{"_index":102,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["marshaldocument(data",{"_index":101,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["marshaller",{"_index":81,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["marshalling",{"_index":210,"title":{},"body":{"index.html":{}}}],["matching",{"_index":37,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["methods",{"_index":117,"title":{},"body":{"injectables/ScllibService.html":{}}}],["miscellaneous",{"_index":142,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":154,"title":{},"body":{"index.html":{},"properties.html":{}}}],["module",{"_index":58,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["modules",{"_index":275,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":121,"title":{},"body":{"injectables/ScllibService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":85,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["namespaceprefixes",{"_index":62,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["namespaces",{"_index":61,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["new",{"_index":91,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["next.0",{"_index":197,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":229,"title":{},"body":{"index.html":{}}}],["npm",{"_index":161,"title":{},"body":{"index.html":{}}}],["null",{"_index":89,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["number",{"_index":32,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["obj",{"_index":148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":51,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["observable(observer",{"_index":104,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["observer.complete",{"_index":109,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["observer.next(result",{"_index":108,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["omit",{"_index":59,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"miscellaneous/functions.html":{}}}],["omit(obj",{"_index":146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opentempl",{"_index":262,"title":{},"body":{"index.html":{}}}],["opentempl/jsonix",{"_index":50,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["opentempl/scl",{"_index":259,"title":{},"body":{"index.html":{}}}],["opentemplate",{"_index":269,"title":{},"body":{"index.html":{}}}],["opentemplate/scl",{"_index":162,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/BaseType-1.html":{},"injectables/ScllibService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":223,"title":{},"body":{"index.html":{}}}],["otherattributes",{"_index":13,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["others",{"_index":187,"title":{},"body":{"index.html":{}}}],["outputs",{"_index":235,"title":{},"body":{"index.html":{}}}],["overview",{"_index":276,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":133,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":84,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["parameters",{"_index":120,"title":{},"body":{"injectables/ScllibService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":204,"title":{},"body":{"index.html":{}}}],["parser",{"_index":227,"title":{},"body":{"index.html":{}}}],["peer",{"_index":137,"title":{},"body":{"dependencies.html":{}}}],["primitives.ts",{"_index":8,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["process",{"_index":205,"title":{},"body":{"index.html":{}}}],["project",{"_index":164,"title":{},"body":{"index.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/BaseType-1.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"properties.html":{}}}],["providedin",{"_index":70,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["public",{"_index":79,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["publish",{"_index":267,"title":{},"body":{"index.html":{}}}],["published",{"_index":195,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":231,"title":{},"body":{"index.html":{}}}],["reference",{"_index":192,"title":{},"body":{"index.html":{}}}],["referenced",{"_index":234,"title":{},"body":{"index.html":{}}}],["release",{"_index":178,"title":{},"body":{"index.html":{}}}],["repository",{"_index":287,"title":{},"body":{"properties.html":{}}}],["require('./mappings",{"_index":56,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["required",{"_index":18,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["result",{"_index":105,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["results",{"_index":36,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":103,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["returns",{"_index":123,"title":{},"body":{"injectables/ScllibService.html":{}}}],["revision",{"_index":180,"title":{},"body":{"index.html":{}}}],["romdhani",{"_index":292,"title":{},"body":{"properties.html":{}}}],["root",{"_index":71,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["rxjs",{"_index":52,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["safe",{"_index":221,"title":{},"body":{"index.html":{}}}],["samir",{"_index":291,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":217,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":55,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["scl",{"_index":99,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{},"properties.html":{}}}],["scllibservice",{"_index":73,"title":{"injectables/ScllibService.html":{}},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["scope",{"_index":260,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":208,"title":{},"body":{"index.html":{}}}],["service",{"_index":69,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["setcontext",{"_index":118,"title":{},"body":{"injectables/ScllibService.html":{}}}],["setcontext(namespace",{"_index":86,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["simplified",{"_index":67,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["source",{"_index":5,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["spdx",{"_index":151,"title":{},"body":{"index.html":{}}}],["src/.../utils.ts",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/scllib.service.ts",{"_index":39,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:25",{"_index":46,"title":{},"body":{"interfaces/IType.html":{}}}],["src/lib/scllib.service.ts:38",{"_index":130,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:40",{"_index":131,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:42",{"_index":132,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:48",{"_index":124,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:61",{"_index":119,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:71",{"_index":127,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/scllib.service.ts:81",{"_index":128,"title":{},"body":{"injectables/ScllibService.html":{}}}],["src/lib/utils/utils.ts",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/xmlns/xml",{"_index":7,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["standard",{"_index":158,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":150,"title":{"index.html":{}},"body":{}}],["state",{"_index":242,"title":{},"body":{"index.html":{}}}],["streaming",{"_index":225,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/IType.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["strongly",{"_index":219,"title":{},"body":{"index.html":{}}}],["structured",{"_index":220,"title":{},"body":{"index.html":{}}}],["structures",{"_index":203,"title":{},"body":{"index.html":{}}}],["supported",{"_index":256,"title":{},"body":{"index.html":{}}}],["tab",{"_index":252,"title":{},"body":{"index.html":{}}}],["table",{"_index":244,"title":{},"body":{"index.html":{}}}],["template.git",{"_index":289,"title":{},"body":{"properties.html":{}}}],["template/issues",{"_index":286,"title":{},"body":{"properties.html":{}}}],["template/open",{"_index":283,"title":{},"body":{"properties.html":{}}}],["template/tree/main/projects/scllib#readme",{"_index":284,"title":{},"body":{"properties.html":{}}}],["this.context",{"_index":90,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.context.createmarshaller",{"_index":95,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.context.createunmarshaller",{"_index":97,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.marshaller",{"_index":94,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.marshaller.marshaldocument(data",{"_index":106,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.scllibservice.marshaldocument({scl",{"_index":186,"title":{},"body":{"index.html":{}}}],["this.scllibservice.setcontext(namespaces",{"_index":177,"title":{},"body":{"index.html":{}}}],["this.unmarshaller",{"_index":96,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.unmarshaller.unmarshalstring(data",{"_index":112,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["this.unmarshaller.unmarshalurl(capabilitiesurl",{"_index":115,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["tool",{"_index":188,"title":{},"body":{"index.html":{}}}],["tooltips",{"_index":255,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":135,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":236,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/BaseType-1.html":{},"injectables/ScllibService.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["type_name",{"_index":14,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["typescript",{"_index":76,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["undefined",{"_index":88,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["unmarshaller",{"_index":82,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["unmarshalling",{"_index":207,"title":{},"body":{"index.html":{}}}],["unmarshalstring",{"_index":111,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["unmarshalstring(data",{"_index":110,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["unmarshalurl",{"_index":114,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["unmarshalurl(capabilitiesurl",{"_index":113,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["updates",{"_index":268,"title":{},"body":{"index.html":{}}}],["usage",{"_index":159,"title":{},"body":{"index.html":{}}}],["use",{"_index":174,"title":{},"body":{"index.html":{}}}],["utils/utils",{"_index":60,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["uuid.v4",{"_index":185,"title":{},"body":{"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["var",{"_index":35,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["verification",{"_index":254,"title":{},"body":{"index.html":{}}}],["version",{"_index":168,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versions",{"_index":257,"title":{},"body":{"index.html":{}}}],["void",{"_index":126,"title":{},"body":{"injectables/ScllibService.html":{}}}],["white_check_mark",{"_index":264,"title":{},"body":{"index.html":{}}}],["written",{"_index":215,"title":{},"body":{"index.html":{}}}],["x",{"_index":261,"title":{},"body":{"index.html":{}}}],["xml",{"_index":199,"title":{},"body":{"index.html":{},"properties.html":{}}}],["xml/json",{"_index":214,"title":{},"body":{"index.html":{}}}],["xmlns/scl",{"_index":53,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{}}}],["xs",{"_index":65,"title":{},"body":{"interfaces/IType.html":{},"injectables/ScllibService.html":{},"index.html":{}}}],["xsd",{"_index":226,"title":{},"body":{"index.html":{},"properties.html":{}}}],["yes",{"_index":125,"title":{},"body":{"injectables/ScllibService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BaseType-1.html":{"url":"interfaces/BaseType-1.html","title":"interface - BaseType-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otherAttributes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TYPE_NAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otherAttributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPE_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPE_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IType.html":{"url":"interfaces/IType.html","title":"interface - IType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/scllib.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic Interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        _SCLType\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/scllib.service.ts:25\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n/// \nimport { Jsonix } from '@opentempl/jsonix';\nimport { Observable } from 'rxjs';\nimport { _SCLType } from './xmlns/SCL';\n// const schemas = require('./mappings/$');\n// import schemas from './mappings/$';\nimport Module from './mappings/$';\nimport {omit} from \"./utils/utils\";\nconst namespaces: any = {\n  namespacePrefixes: {\n    \"http://www.iec.ch/61850/2003/SCL\": \"\",\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\"\n  },\n  mappingStyle : \"simplified\"\n};\n\n/**\n * Generic Interface\n */\nexport interface IType {\n  [key: string]: _SCLType;\n}\n\n/**\n * Main Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScllibService {\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public context: any;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public marshaller: any;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public unmarshaller: any;\n  \n  /**\n   * Init Context - Compiler\n   * @param namespace\n   */\n  setContext(namespace?: any){\n    if(namespace != undefined && namespace != null) {\n      this.context = new Jsonix.Context([Module.$],namespace);\n    } else {\n      this.context = new Jsonix.Context([Module.$, namespaces]); \n    }\n    this.marshaller = this.context.createMarshaller();\n    this.unmarshaller = this.context.createUnmarshaller();\n    console.info('@@@@ scl-lib @@@@ context : ',this.context);\n    console.info('@@@@ scl-lib @@@@ marshaller : ',this.marshaller);\n    console.info('@@@@ scl-lib @@@@ unmarshaller : ',this.unmarshaller);\n  }\n\n  marshalDocument(data: any): Observable {\n    console.info('@@@@ scl-lib @@@@ marshalDocument ...');\n    return new Observable(observer => {\n      const result = this.marshaller.marshalDocument(data);\n      console.debug('@@@@ scl-lib @@@@ marshalDocument result : ',result);\n      observer.next(result);\n      observer.complete();\n    });\n  }\n\n  unmarshalString(data: string): Observable {\n    console.info('@@@@ scl-lib @@@@ unmarshalString ...');\n    return new Observable(observer => {\n      const result = this.unmarshaller.unmarshalString(data);\n      console.debug('@@@@ scl-lib @@@@ unmarshalString result : ',result);\n      observer.next(result);\n      observer.complete();\n    });\n  }\n\n  unmarshalURL(capabilitiesUrl: any): Observable {\n    console.info('@@@@ scl-lib @@@@ unmarshalURL ...');\n    return new Observable(observer => {\n      this.unmarshaller.unmarshalURL(capabilitiesUrl, (result: any) => {\n        console.debug('@@@@ scl-lib @@@@ unmarshalURL result : ',result);\n        observer.next(result);\n        observer.complete();\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScllibService.html":{"url":"injectables/ScllibService.html","title":"injectable - ScllibService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScllibService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/scllib.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Main Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                marshaller\n                            \n                            \n                                    Public\n                                unmarshaller\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                marshalDocument\n                            \n                            \n                                setContext\n                            \n                            \n                                unmarshalString\n                            \n                            \n                                unmarshalURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        marshalDocument\n                        \n                    \n                \n            \n            \n                \nmarshalDocument(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/scllib.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContext\n                        \n                    \n                \n            \n            \n                \nsetContext(namespace?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/scllib.service.ts:48\n                \n            \n\n\n            \n                \n                    Init Context - Compiler\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unmarshalString\n                        \n                    \n                \n            \n            \n                \nunmarshalString(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/scllib.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unmarshalURL\n                        \n                    \n                \n            \n            \n                \nunmarshalURL(capabilitiesUrl: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/scllib.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    capabilitiesUrl\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/scllib.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        marshaller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/scllib.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        unmarshaller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/scllib.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n/// \nimport { Jsonix } from '@opentempl/jsonix';\nimport { Observable } from 'rxjs';\nimport { _SCLType } from './xmlns/SCL';\n// const schemas = require('./mappings/$');\n// import schemas from './mappings/$';\nimport Module from './mappings/$';\nimport {omit} from \"./utils/utils\";\nconst namespaces: any = {\n  namespacePrefixes: {\n    \"http://www.iec.ch/61850/2003/SCL\": \"\",\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\"\n  },\n  mappingStyle : \"simplified\"\n};\n\n/**\n * Generic Interface\n */\nexport interface IType {\n  [key: string]: _SCLType;\n}\n\n/**\n * Main Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScllibService {\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public context: any;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public marshaller: any;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  public unmarshaller: any;\n  \n  /**\n   * Init Context - Compiler\n   * @param namespace\n   */\n  setContext(namespace?: any){\n    if(namespace != undefined && namespace != null) {\n      this.context = new Jsonix.Context([Module.$],namespace);\n    } else {\n      this.context = new Jsonix.Context([Module.$, namespaces]); \n    }\n    this.marshaller = this.context.createMarshaller();\n    this.unmarshaller = this.context.createUnmarshaller();\n    console.info('@@@@ scl-lib @@@@ context : ',this.context);\n    console.info('@@@@ scl-lib @@@@ marshaller : ',this.marshaller);\n    console.info('@@@@ scl-lib @@@@ unmarshaller : ',this.unmarshaller);\n  }\n\n  marshalDocument(data: any): Observable {\n    console.info('@@@@ scl-lib @@@@ marshalDocument ...');\n    return new Observable(observer => {\n      const result = this.marshaller.marshalDocument(data);\n      console.debug('@@@@ scl-lib @@@@ marshalDocument result : ',result);\n      observer.next(result);\n      observer.complete();\n    });\n  }\n\n  unmarshalString(data: string): Observable {\n    console.info('@@@@ scl-lib @@@@ unmarshalString ...');\n    return new Observable(observer => {\n      const result = this.unmarshaller.unmarshalString(data);\n      console.debug('@@@@ scl-lib @@@@ unmarshalString result : ',result);\n      observer.next(result);\n      observer.complete();\n    });\n  }\n\n  unmarshalURL(capabilitiesUrl: any): Observable {\n    console.info('@@@@ scl-lib @@@@ unmarshalURL ...');\n    return new Observable(observer => {\n      this.unmarshaller.unmarshalURL(capabilitiesUrl, (result: any) => {\n        console.debug('@@@@ scl-lib @@@@ unmarshalURL result : ',result);\n        observer.next(result);\n        observer.complete();\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_Date.html":{"url":"interfaces/_Date.html","title":"interface - _Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_any.html":{"url":"interfaces/_any.html","title":"interface - _any","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _any\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_boolean.html":{"url":"interfaces/_boolean.html","title":"interface - _boolean","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _boolean\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_number.html":{"url":"interfaces/_number.html","title":"interface - _number","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _number\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_string.html":{"url":"interfaces/_string.html","title":"interface - _string","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _string\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { value: any; }\n\nexport interface _boolean extends BaseType { value: boolean; }\n\nexport interface _Date extends BaseType { value: Date; }\n\nexport interface _number extends BaseType { value: number; }\n\nexport interface _string extends BaseType { value: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^16.2.3\n        \n            @angular/core : ^16.2.3\n        \n            lodash : ^4.17.21\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            omit   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        omit\n                        \n                    \n                \n            \n            \n                \nomit(obj, arr)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nSPDX-License-Identifier: MIT license\n-->\n\nscl-lib\nLibrary for IEC 61850 standard\n\n\n\nUsage\nInstall:\nnpm i @opentemplate/scl-lib\n\nSPDX-License-Identifier: MIT license\n-->\n\nLibWorkspace\nThis project was generated with Angular CLI version 14.1.3.\nscl-lib\nLibrary for IEC 61850 standard\n\n\n\n\n\nUsage\nInstall:\nnpm i @opentemplate/scl-libContext\n\nUsage\nYou can import the library files from TypeScript:\nimport { ScllibService, _SCLType } from '@opentemplate/scl-lib';Example\n\nMarshal Document use case\n\nconst namespaces: any = {\n  namespacePrefixes: {\n    \"http://www.iec.ch/61850/2003/SCL\": \"\",\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\"\n  },\n  mappingStyle : \"simplified\"\n};\n...\nconstructor(private scllibService: ScllibService) {\n    this.scllibService.setContext(namespaces);\n}\n...\nconst scl: _SCLType = {\n  release: 4,\n  revision: \"B\",\n  version: \"2007\",\n  header: {\n    id: uuid.v4()\n  }\n};\n...\nthis.scllibService.marshalDocument({SCL: scl})\n\n_SCLType interface and others generated by Jsonix tool.\nScllibService use a Javascript compiler generated by the cxsd tool.\n\n\nAPI Reference:\nJsonix\nAfter fixing this https://github.com/highsource/jsonix/pull/266 we published 3.0.0-next.0 to npm as @opentempl/jsonix.\n\nJsonix (JSON interfaces for XML) is a JavaScript library which allows you to convert between XML and JSON structures.\nWith Jsonix you can parse XML into JSON (this process is called unmarshalling) or serialize JSON in XML form (this is called marshalling).\nThese conversions are based on declarative XML/JSON mappings which can be written manually or generated from an XML Schema.\n\nJsonix advantages:\n\nStrongly structured\nType-safe\nBidirectional\n(Optionally) XML Schema-driven\n\ncxsd\n\ncxsd is a streaming XSD parser and XML parser generator for Node.js and\n(optionally but highly recommended) TypeScript.\nIt automatically downloads all referenced .xsd files and outputs two files for each defined namespace:\n.js JavaScript code for Node.js containing a compact state machine table for the cxml parser.\n.d.ts TypeScript definition with JSDoc comments to help editors with tab completion, type verification and tooltips.\n\n\n\n\nSupported Versions\nInformation about supported @opentempl/scl-lib versions.\n\n\n\nVersion\nSupported\nScope\n\n\n\n\n\n:x:\nopentempl\n\n\n> 0.1.24 & \n:white_check_mark:\nopentempl\n\n\n\nWe published 0.2.0 to npm as @opentemplate/scl-lib and will continue to publish updates there.\n\n\n\nVersion\nSupported\nScope\nScope\n\n\n\n\n>= 0.2.0\n:white_check_mark:\nopentemplate\nAngular 14\n\n\n= 1.0.5\n:white_check_mark:\nopentemplate\nAngular 15\n\n\n>= 1.0.6\n:white_check_mark:\nopentemplate\nAngular 16\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    220 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.12\n        \n            Description : Library for IEC 61850 standard\n        \n            Keywords : XML, XSD, CXSD, SCL, IEC, IEC61850\n        \n            Homepage : https://github.com/open-template/open-template/tree/main/projects/scllib#readme\n        \n            Bugs : https://github.com/open-template/open-template/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-template/open-template.git\n        \n            Author : Samir Romdhani\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
